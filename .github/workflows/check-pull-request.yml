name: Check Pull Request

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - edited
      - reopened
      - synchronize
      - ready_for_review

jobs:
  pr-validator:
    name: Run Pull Request Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Test code and Create Test Coverage Reports
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: npm
      - run: |
          npm ci
          npm run build
          npm run format:check
          npm run lint
          npm test

      - name: Test Docker Image Build
        run: |
          set +e
          docker build --no-cache --tag cdp-node-frontend-template .
          exit $?

      - name: SonarCloud Scan
        if: github.actor != 'dependabot[bot]'
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  vulnerability-scan:
    name: Vulnerability Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Dependency Review
        uses: actions/dependency-review-action@v4

      - name: Audit npm dependencies
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: npm
      - name: Run npm audit and fail on high/critical vulnerabilities
        run: |
          npm ci
          npm audit --audit-level=high --production || (echo 'Vulnerabilities found!' && exit 1)

  test-journey:
    name: Run Journey Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - run: docker build -t defradigital/marine-licensing-frontend:${{github.sha}} .
      - uses: DEFRA/marine-licensing-journey-tests/run-journey-tests@main
        with:
          marine-licensing-frontend: ${{github.sha}}
          branch: main
